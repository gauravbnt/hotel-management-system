plugins {
	id 'java'
    id 'org.sonarqube' version '4.4.1.3373' 

	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'

}

group = 'com.example.hms'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.0'

	implementation("org.springframework.boot:spring-boot-starter-validation")
	
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'

	testImplementation 'org.mockito:mockito-core:5.12.0'

	testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.10" // ✅ use latest compatible version
}

jacocoTestReport {
    dependsOn test // tests must run before report is generated

    reports {
        xml.required = true   // ✅ required by SonarQube
        html.required = false
        csv.required = false
    }
}
